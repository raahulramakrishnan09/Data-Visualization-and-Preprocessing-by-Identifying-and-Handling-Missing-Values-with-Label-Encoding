# -*- coding: utf-8 -*-
"""Data_Preprocessing(Identifying_&_Handling_Missing_values_With_Value_Encoding).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KHhqTRD2U4DFnrFzZdNGJwvCYGH0FZ0K
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('/content/insurance_claims.csv')
df

df.info()

df.isnull().sum()

#replacing
df.replace('?',np.nan, inplace= True)
df

df.info()

df.isnull().sum()

df1=df.drop('_c39',axis=1)

import missingno as msno
msno.bar(df)
plt.show()

#drop rows with missing values
df1.dropna(inplace=True)

df1.info()

df2=df.copy()

df2=df.drop('_c39',axis=1)

df2['collision_type']=df2['collision_type'].fillna(df2['collision_type'].mode()[0])
df2['property_damage']=df2['property_damage'].fillna(df2['property_damage'].mode()[0])

df2.info()

df2.iloc[:,2:7]

df2.iloc[:,-1]

df2.iloc[20:400,0]

df2.iloc[:,:-1]

data=pd.read_csv('/content/Data (2).csv')
data.iloc[:, 1:3]

data.isnull().sum()

from sklearn.impute import SimpleImputer
imputer = SimpleImputer(missing_values=np.nan,strategy='mean')
data.iloc[:, 1:3]=imputer.fit_transform(data.iloc[:, 1:3])
data.iloc[:, 1:3]

data.isnull().sum()

df.info()

#finding_of_outliers
a=df['months_as_customer']
b=df['property_claim']
c=df['vehicle_claim']
sns.boxplot(a)

sns.boxplot(b)

sns.boxplot(c)

#finding_outliers_using_for_loop
plt.figure(figsize=(30,25))
plotnumber=1

for col in df.columns:
  if plotnumber<=24:
    ax=plt.subplot(5,5,plotnumber)
    sns.boxplot(df[col])
    plt.xlabel(col,fontsize=25)

  plotnumber +=1
plt.tight_layout()
plt.show()

plt.figure(figsize=(20,15))
plotnumber=1

for col in df.columns:
  if plotnumber<=24:
    ax=plt.subplot(5,5,plotnumber)
    sns.histplot(df[col])
    plt.xlabel(col,fontsize=15)

  plotnumber +=1
plt.tight_layout()
plt.show()

#Box plot for loan_amount
b.plot(kind='box')
plt.show()

#Encoding_Data(2)
from sklearn.preprocessing import LabelEncoder
f=LabelEncoder()
data['Country']=f.fit_transform(data['Country'])
data['Purchased']=f.fit_transform(data['Purchased'])

plt.figure(figsize=(18,12))

corr =data.corr()

sns.heatmap(data=corr,annot=True,fmt='.2g',linewidth=1)
plt.show()